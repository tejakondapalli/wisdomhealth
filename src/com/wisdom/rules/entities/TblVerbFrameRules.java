package com.wisdom.rules.entities;

import java.io.Serializable;
import java.util.Collections;
import java.util.TreeSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: tblverbframerules.
 * @author autogenerated
 */

@Entity
@Table(name = "TblVerbFrameRules")
public class TblVerbFrameRules implements Cloneable, Serializable{

	/** Serial Version UID. */
	private static final long serialVersionUID = -558917068L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Integer> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Integer>());
	
	/** hashCode temporary storage. */
	private volatile Integer hashCode;
	

	/** Field mapping. */
	private Byte anyRegionUse;
	/** Field mapping. */
	private TblCodeFamily fkCodeFamilyId;
	/** Field mapping. */
	private Integer id;
	/** Field mapping. */
	private String scope;
	/** Field mapping. */
	private Set<TblCodes> tblCodes = new TreeSet<TblCodes>();

	/** Field mapping. */
	private Set<TblModifiers> tblModifiers = new TreeSet<TblModifiers>();

	/** Field mapping. */
	private Set<TblRegionUseRules> tblRegionUseRules = new TreeSet<TblRegionUseRules>();

	/** Field mapping. */
	private Set<TblSlots> tblSlots = new TreeSet<TblSlots>();

	/** Field mapping. */
	private Set<TblVerbFrames> tblVerbFrames = new TreeSet<TblVerbFrames>();

	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public TblVerbFrameRules() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public TblVerbFrameRules(Integer id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param anyrRgionUse Byte object;
	 * @param fkCodeFamilyId Tblcodefamily object;
	 * @param id Integer object;
	 */
	public TblVerbFrameRules(Byte anyrRgionUse, TblCodeFamily fkCodeFamilyId, Integer id) {

		this.anyRegionUse = anyrRgionUse;
		this.fkCodeFamilyId = fkCodeFamilyId;
		this.id = id;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return TblVerbFrameRules.class;
	}
 

    /**
     * Return the value associated with the column: anyregionuse.
	 * @return A Byte object (this.anyregionuse)
	 */
	@Basic( optional = false )
	@Column( nullable = false  )
	public Byte getAnyRegionUse() {
		return this.anyRegionUse;
		
	}
	

  
    /**  
     * Set the value related to the column: anyregionuse.
	 * @param anyRegionUse the anyregionuse value you wish to set
	 */
	public void setAnyRegionUse(final Byte anyRegionUse) {
		this.anyRegionUse = anyRegionUse;
	}

    /**
     * Return the value associated with the column: fkcodefamilyid.
	 * @return A Tblcodefamily object (this.fkcodefamilyid)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "fkCodeFamilyId", nullable = false )
	public TblCodeFamily getFkCodeFamilyId() {
		return this.fkCodeFamilyId;
		
	}
	

  
    /**  
     * Set the value related to the column: fkcodefamilyid.
	 * @param fkCodeFamilyId the fkcodefamilyid value you wish to set
	 */
	public void setFkCodeFamilyId(final TblCodeFamily fkCodeFamilyId) {
		this.fkCodeFamilyId = fkCodeFamilyId;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Integer object (this.id)
	 */
    @Id 
	@Basic( optional = false )
	@Column( name = "id", nullable = false  )
	public Integer getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Integer id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: scope.
	 * @return A String object (this.scope)
	 */
	@Basic( optional = true )
	@Column( length = 45  )
	public String getScope() {
		return this.scope;
		
	}
	

  
    /**  
     * Set the value related to the column: scope.
	 * @param scope the scope value you wish to set
	 */
	public void setScope(final String scope) {
		this.scope = scope;
	}

    /**
     * Return the value associated with the column: tblCodes.
	 * @return A Set&lt;TblCodes&gt; object (this.tblCodes)
	 */
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "tblVerbframeRulesCodes", joinColumns = @JoinColumn(name = "fkVerbFrameRuleId", referencedColumnName = "id"), inverseJoinColumns = @JoinColumn(name = "fkCodeId", referencedColumnName = "id"))
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( nullable = false  )
	@OrderBy("id ASC")
	public Set<TblCodes> getTblCodes() {
		return this.tblCodes;
		
	}
	
	/**
	 * Adds a bi-directional link of type TblCodes to the tblCodes set.
	 * @param tblCodes item to add
	 */
	public void addTblCodes(TblCodes tblCodes) {
		this.tblCodes.add(tblCodes);
	}

  
    /**  
     * Set the value related to the column: tblCodes.
	 * @param tblCodes the tblCodes value you wish to set
	 */
	public void setTblCodes(final Set<TblCodes> tblCodes) {
		this.tblCodes = tblCodes;
	}

    /**
     * Return the value associated with the column: tblModifiers.
	 * @return A Set&lt;TblModifiers&gt; object (this.tblModifiers)
	 */
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "tblVerbframeRulesModifiers", joinColumns = @JoinColumn(name = "fkVerbframeRuleId", referencedColumnName = "id"), inverseJoinColumns = @JoinColumn(name = "fkModifierId", referencedColumnName = "id"))
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( nullable = false  )
	@OrderBy("id ASC")
	public Set<TblModifiers> getTblModifiers() {
		return this.tblModifiers;
		
	}
	
	/**
	 * Adds a bi-directional link of type TblModifiers to the tblModifiers set.
	 * @param tblModifiers item to add
	 */
	public void addTblModifiers(TblModifiers tblModifiers) {
		this.tblModifiers.add(tblModifiers);
	}

  
    /**  
     * Set the value related to the column: tblModifiers.
	 * @param tblModifiers the tblModifiers value you wish to set
	 */
	public void setTblModifiers(final Set<TblModifiers> tblModifiers) {
		this.tblModifiers = tblModifiers;
	}

    /**
     * Return the value associated with the column: TblRegionuserules.
	 * @return A Set&lt;TblRegions&gt; object (this.tblRegions)
	 */
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "tblVerbFrameRulesRegions", joinColumns = @JoinColumn(name = "fkVerbFrameRuleId", referencedColumnName = "id"), inverseJoinColumns = @JoinColumn(name = "fkRegionId", referencedColumnName = "id"))
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( nullable = false  )
	@OrderBy("id ASC")
	public Set<TblRegionUseRules> getTblRegionUseRules() {
		return this.tblRegionUseRules;
		
	}
	
	/**
	 * Adds a bi-directional link of type TblRegions to the tblRegions set.
	 * @param tblRegionUseRules item to add
	 */
	public void addTblRegionUseRules(TblRegionUseRules tblRegionUseRules) {
		this.tblRegionUseRules.add(tblRegionUseRules);
	}

  
    /**  
     * Set the value related to the column: tblRegions.
	 * @param tblRegionUseRules the tblRegions value you wish to set
	 */
	public void setTblRegionUseRules(final Set<TblRegionUseRules> tblRegionUseRules) {
		this.tblRegionUseRules = tblRegionUseRules;
	}

    /**
     * Return the value associated with the column: tblSlots.
	 * @return A Set&lt;TblSlots&gt; object (this.tblSlots)
	 */
 	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "tblVerbFrameRulesSlots", joinColumns = @JoinColumn(name = "fkVerbFrameRuleId", referencedColumnName = "id"), inverseJoinColumns = @JoinColumn(name = "fkSlotId", referencedColumnName = "id"))
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( nullable = false  )
 	@OrderBy("id ASC")
 	public Set<TblSlots> getTblSlots() {
		return this.tblSlots;
		
	}
	
	/**
	 * Adds a bi-directional link of type TblSlots to the tblSlots set.
	 * @param tblSlots item to add
	 */
	public void addTblSlots(TblSlots tblSlots) {
		this.tblSlots.add(tblSlots);
	}

  
    /**  
     * Set the value related to the column: tblSlots.
	 * @param tblSlots the tblSlots value you wish to set
	 */
	public void setTblSlots(final Set<TblSlots> tblSlots) {
		this.tblSlots = tblSlots;
	}

    /**
     * Return the value associated with the column: tblVerbframes.
	 * @return A Set&lt;TblVerbframes&gt; object (this.tblVerbframes)
	 */
 	
 	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "tblVerbFrameRulesVerbFrames", joinColumns = @JoinColumn(name = "fkVerbFrameRuleId", referencedColumnName = "id"), inverseJoinColumns = @JoinColumn(name = "fkVerbFrameId", referencedColumnName = "id"))
	@Basic( optional = false )
	@Column( nullable = false  )
 	@OrderBy("id ASC")
 	public Set<TblVerbFrames> getTblVerbFrames() {
		return this.tblVerbFrames;
		
	}
	
	/**
	 * Adds a bi-directional link of type TblVerbframes to the tblVerbframes set.
	 * @param tblVerbFrames item to add
	 */
	public void addTblVerbFrames(TblVerbFrames tblVerbFrames) {
		this.tblVerbFrames.add(tblVerbFrames);
	}

  
    /**  
     * Set the value related to the column: tblVerbframes.
	 * @param tblVerbFrames the tblVerbframes value you wish to set
	 */
	public void setTblVerbFrames(final Set<TblVerbFrames> tblVerbFrames) {
		this.tblVerbFrames = tblVerbFrames;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public TblVerbFrameRules clone() throws CloneNotSupportedException {
		
        final TblVerbFrameRules copy = (TblVerbFrameRules)super.clone();

		copy.setAnyRegionUse(this.getAnyRegionUse());
		copy.setFkCodeFamilyId(this.getFkCodeFamilyId());
		copy.setId(this.getId());
		copy.setScope(this.getScope());
		if (this.getTblCodes() != null) {
			copy.getTblCodes().addAll(this.getTblCodes());
		}
		if (this.getTblModifiers() != null) {
			copy.getTblModifiers().addAll(this.getTblModifiers());
		}
		if (this.getTblRegionUseRules() != null) {
			copy.getTblRegionUseRules().addAll(this.getTblRegionUseRules());
		}
		if (this.getTblSlots() != null) {
			copy.getTblSlots().addAll(this.getTblSlots());
		}
		if (this.getTblVerbFrames() != null) {
			copy.getTblVerbFrames().addAll(this.getTblVerbFrames());
		}
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("anyregionuse: " + this.getAnyRegionUse() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("scope: " + this.getScope() + ", ");
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final TblVerbFrameRules that; 
		try {
			that = (TblVerbFrameRules) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAnyRegionUse() == null) && (that.getAnyRegionUse() == null)) || (getAnyRegionUse() != null && getAnyRegionUse().equals(that.getAnyRegionUse())));
		result = result && (((getFkCodeFamilyId() == null) && (that.getFkCodeFamilyId() == null)) || (getFkCodeFamilyId() != null && getFkCodeFamilyId().getId().equals(that.getFkCodeFamilyId().getId())));	
		result = result && (((getScope() == null) && (that.getScope() == null)) || (getScope() != null && getScope().equals(that.getScope())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Integer newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0) {
							newHashCode = getId();
						} else {

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
	return (Integer) this.hashCode;
	}
	

	
}
